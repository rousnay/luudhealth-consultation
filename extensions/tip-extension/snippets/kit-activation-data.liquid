{{ 'stylesheet' | asset_url | stylesheet_tag }}
<script src="{{ 'javascript' | asset_url }}" defer></script>
<script>
  console.log("TIP App: Theme extension loaded! - 2");
</script>


<details>
  <summary>KIT Activation</summary>
</details>

<button
  type="submit"
  aria-label="submit"
  name="submit"
  id="submit"
  class="button"
  onclick="startConsultancy()">ACTIVE YOUR KIT
</button>


<form action="">
  <input
    type="hidden"
    name="contact[tags]"
    value="newsletter">
  <input
    type="hidden"
    name="contact[accepts_marketing]"
    value="true">

  <div id="tip-form"></div>

  <button
    type="submit"
    aria-label="submit"
    name="submit"
    id="submit-consultancy"
    class="button">Submit
  </button>

</form>



<script type="text/javascript">
  const treatmentId = 6257;
  let consultancy = [];
  
            const tipForm = document.getElementById('tip-form');
            const field = document.createDocumentFragment();
  
            function startConsultancy(){
            (async () => {
            const url = `/apps/tip/consultancy/generate`;
            const method = "POST";
            const response = await fetch(url, {
              method,
              headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({
                'treatmentId': parseFloat(treatmentId),
                'type': 'NEW',
              }),
            });
            if (response.status === 200) {
              const fullResponse = await response.json();
              console.log(fullResponse?.data[0]);
              consultancy = fullResponse?.data[0]?.questions;
              consultancy.map(function(question) {
                //create element
                let div = document.createElement('div');
                let span = document.createElement('span');
                let innerDiv = document.createElement('div');
                let label = document.createElement('label');
                let input = document.createElement('input');
                //add inner html to the elements
                span.innerHTML = `${question?.question_text}`;
                label.innerHTML = `Question type: ${question?.question_type}`;
                //add classes to the elements
                div.classList.add("field-wrapper");
                innerDiv.classList.add("field");
                label.classList.add("field__label");
                input.classList.add("field__input");
                //setting attributes to the elements
                label.setAttribute("for", question?.question_id);
                input.setAttribute("name", question?.question_id);
                input.setAttribute("type", "text");
                input.setAttribute("placeholder", `Question type: ${question?.question_type}`);
                //append child elements to the parents
                innerDiv.appendChild(input);
                innerDiv.appendChild(label);
                div.appendChild(span);
                div.appendChild(innerDiv);
                field.appendChild(div);
              });
  
            } else {
              console.log("Something went wrong with TIP API");
              console.log(response);
            }
            tipForm.appendChild(field);
            })();
            };
  
  
            function submitConsultancy(){
            let phone = document.getElementById("phone").value;
            let email = document.getElementById("email").value;
  
            console.log("phone");
            console.log(phone);
            console.log("email");
            console.log(email);
            const treatmentIds = 6257;
  
            (async () => {
              const url = `/apps/tip/consultancy`;
              const method = "POST";
              const response = await fetch(url, {
                method,
                headers: {
                  'Accept': 'application/json',
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                  'treatmentId': parseFloat(treatmentIds),
                  'type': 'NEW',
                }),
              });
              if (response.status === 200) {
                const fullResponse = await response.json();
                console.log(fullResponse?.data[0]);
              } else {
                console.log("Something went wrong with TIP API");
                console.log(response);
              }
            })();
            }</script>