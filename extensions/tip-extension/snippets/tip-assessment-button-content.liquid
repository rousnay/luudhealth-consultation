{{ 'stylesheet' | asset_url | stylesheet_tag }}
<script src="{{ 'javascript' | asset_url }}" defer></script>

{%- liquid
  assign section_id = section.id
  assign product_id = product.id
  assign form_id = form.id
  assign condition_id = block.settings.condition_id
  assign treatment_id = block.settings.treatment_id
  assign treatment_type = block.settings.treatment_type
-%}

<div class="product-form__input">
  <input
    type="hidden"
    form="product-form-{{ section_id }}-{{ product_id }}"
    id="product-submission-uuid"
    name="properties[_submission_uuid]"
  >

  <input
    type="hidden"
    form="product-form-{{ section_id }}-{{ product_id }}"
    id="product-treatment-type"
    name="properties[_treatment_type]"
    value="{{ treatment_type }}"
  >

  <input
    type="hidden"
    form="product-form-{{ section_id }}-{{ product_id }}"
    id="product-condition-id"
    name="properties[_condition_id]"
    value="{{ condition_id }}"
  >

  <input
    type="hidden"
    form="product-form-{{ section_id }}-{{ product_id }}"
    id="product-treatment-id"
    name="properties[_treatment_id]"
    value="{{ treatment_id }}"
  >
</div>

<div class="tip-app-content product-form__assessment-button">
  <button type="button" class="button tip-full-width" id="start-consultancy">START ASSESSMENT</button>
</div>

<script type="text/javascript">
  











var product_treatment_id;
var product_condition_id;

function hideElement(items) {
  for (const item of items) {
    item.style.display = 'none';
  }
}

function showElement(items) {
  for (const item of items) {
    item.style.display = 'block';
  }
}

function handleAddToCart() {
  const product_addToCart_button = document.getElementById('AddToCart');
  product_addToCart_button.addEventListener('click', () => {
    localStorage.removeItem('submission_uuid');
  });
}

function redirectToConsultancyPage(current_treatment_type, current_condition_id, current_treatment_id) {
  localStorage.setItem('targeted_treatment_url', window.location.href);
  const startConsultancy = document.getElementById('start-consultancy');
  startConsultancy.addEventListener('click', () => {
      window.location.href = `/pages/consultancy/?treatmentType=${current_treatment_type}&conditionId=${current_condition_id}&treatmentId=${current_treatment_id}`;
  });
}

getReady(function () {

  product_treatment_type = document.getElementById('product-treatment-type').value;
  localStorage.setItem('treatment_type', product_treatment_type);

  product_condition_id = document.getElementById('product-condition-id').value;
  localStorage.setItem('condition_id', product_condition_id);

  product_treatment_id = document.getElementById('product-treatment-id').value;
  localStorage.setItem('treatment_id', product_treatment_id);

  const tip_app_block = document.querySelector('.product-form .shopify-app-block'); // Get the first item
  const product_assessment_button = document.querySelector('.product-form__assessment-button');
  const product_submission_uuid = document.getElementById('product-submission-uuid');
  const the_submission_uuid = localStorage.getItem('submission_uuid');
  const stored_tip_unique_form_number = localStorage.getItem('tip_unique_form_number');
  const gen_tip_unique_form_number = product_condition_id + the_submission_uuid;
  const is_same_product = stored_tip_unique_form_number === gen_tip_unique_form_number;

  console.log('Assessment button loaded: V9');
  console.log('Treatment Type:', product_treatment_type);
  console.log('Condition ID:', product_condition_id);
  console.log('Treatment ID:', product_treatment_id);
  console.log('Product main UUID:', the_submission_uuid);
  console.log('stored_tip_unique_form_number:', stored_tip_unique_form_number);
  console.log('gen_tip_unique_form_number:', gen_tip_unique_form_number);
  console.log('is_same_product:', is_same_product);

  const product_order_elements = []; // Initialize an array to store all the next siblings
  let nextSibling = tip_app_block.nextElementSibling; // Get the first next sibling

  while (nextSibling) {
    product_order_elements.push(nextSibling); // Add the next sibling to the array
    nextSibling = nextSibling.nextElementSibling; // Move to the next sibling
  }

  if (is_same_product) {
    console.log(the_submission_uuid);
    product_submission_uuid.value = the_submission_uuid;
    hideElement([product_assessment_button]); //intentionally treated as an array
    handleAddToCart();

  } else if (product_treatment_type == 'non_pharmacy') {
    const generated_uuid = self.crypto.randomUUID();
    console.log("generated_uuid:", generated_uuid);
    product_submission_uuid.value = generated_uuid;
    hideElement([product_assessment_button]); //intentionally treated as an array
    handleAddToCart();
  } else {
    hideElement(product_order_elements);
    showElement([product_assessment_button]); //intentionally treated as an array
  }

  redirectToConsultancyPage(product_treatment_type, product_condition_id, product_treatment_id);
});


  function getReady(fn) {
    if (document.readyState === 'complete' || document.readyState === 'interactive') {
      setTimeout(fn, 1);
      document.removeEventListener('DOMContentLoaded', fn);
    } else {
      document.addEventListener('DOMContentLoaded', fn);
    }
  }

  {% comment %} let sectionId = document.querySelector('#shopify-block-{{ block.id }}').closest('section').id;
  console.log(sectionId); {% endcomment %}

































</script>
